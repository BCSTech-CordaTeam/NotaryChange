group 'com.github.roger3cev'
version '4'

buildscript {
    ext.corda_release_group = 'net.corda'
    ext.corda_release_version = '3.2-corda'
    ext.corda_gradle_plugins_version = '3.2.1'
    ext.kotlin_version = '1.1.60'
    ext.quasar_version = '0.7.6'
    ext.junit_version = '4.12'

    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "net.corda.plugins:cordapp:$corda_gradle_plugins_version"
        classpath "net.corda.plugins:cordformation:$corda_gradle_plugins_version"
        classpath "net.corda.plugins:quasar-utils:$corda_gradle_plugins_version"
    }
}

repositories {
    mavenLocal()
    jcenter()
    mavenCentral()
    maven { url 'https://jitpack.io' }
    maven { url 'https://ci-artifactory.corda.r3cev.com/artifactory/corda-releases' }
}

apply plugin: 'kotlin'
apply plugin: 'net.corda.plugins.cordapp'
apply plugin: 'net.corda.plugins.cordformation'
apply plugin: 'net.corda.plugins.quasar-utils'

sourceSets {
    main {
        resources {
            srcDir "config/dev"
        }
    }
    test {
        resources {
            srcDir "config/test"
        }
    }
}

dependencies {
    compile group: 'org.jetbrains.kotlin', name: 'kotlin-stdlib-jre8', version: kotlin_version
    testCompile group: 'org.jetbrains.kotlin', name: 'kotlin-test', version: kotlin_version
    testCompile group: 'junit', name: 'junit', version: junit_version

    // Corda integration dependencies
    cordaCompile group: corda_release_group, name: 'corda-core', version: corda_release_version
    cordaCompile group: corda_release_group, name: 'corda-finance', version: corda_release_version
    cordaCompile group: corda_release_group, name: 'corda-jackson', version: corda_release_version
    cordaCompile group: corda_release_group, name: 'corda-webserver-impl', version: corda_release_version
    cordaCompile group: corda_release_group, name: 'corda-rpc', version: corda_release_version
    cordaCompile group: corda_release_group, name: 'corda-node', version: corda_release_version
    cordaRuntime group: corda_release_group, name: 'corda', version: corda_release_version
    cordaRuntime group: corda_release_group, name: 'corda-webserver', version: corda_release_version

    testCompile group: corda_release_group, name: 'corda-node-driver', version: corda_release_version
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    kotlinOptions {
        languageVersion = "1.1"
        apiVersion = "1.1"
        jvmTarget = "1.8"
        javaParameters = true // Useful for reflection.
    }
}

task deployNodes(type: net.corda.plugins.Cordform, dependsOn: ['jar']) {
    directory "./build/nodes"
    node {
        name "O=OldNotary,L=London,C=GB"
        notary = [validating : true]
        p2pPort 10002
        rpcSettings {
            address("localhost:10003")
            adminAddress("localhost:10043")
        }
        cordapps = []
        rpcUsers = [[ user: "user1", "password": "test", "permissions": ["ALL"]]]
    }
    node {
        name "O=NewNotary,L=London,C=GB"
        notary = [validating : true]
        p2pPort 10012
        rpcSettings {
            address("localhost:10013")
            adminAddress("localhost:10050")
        }
        cordapps = []
        rpcUsers = [[ user: "user1", "password": "test", "permissions": ["ALL"]]]
    }
    node {
        name "O=PartyA,L=London,C=GB"
        p2pPort 10005
        rpcSettings {
            address("localhost:10006")
            adminAddress("localhost:10046")
        }
        webPort 10007
        cordapps = []
        rpcUsers = [[ user: "user1", "password": "test", "permissions": ["ALL"]]]
    }
    node {
        name "O=PartyB,L=New York,C=US"
        p2pPort 10008
        rpcSettings {
            address("localhost:10009")
            adminAddress("localhost:10049")
        }
        webPort 10010
        cordapps = []
        rpcUsers = [[ user: "user1", "password": "test", "permissions": ["ALL"]]]
    }
    node {
        name "O=PartyC,L=New York,C=US"
        p2pPort 10016
        rpcSettings {
            address("localhost:10017")
            adminAddress("localhost:10053")
        }
        webPort 10010
        cordapps = []
        rpcUsers = [[ user: "user1", "password": "test", "permissions": ["ALL"]]]
    }
}

task runYoRPCNodeA(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    main = 'net.corda.yo.ClientKt'
    args 'localhost:10006'
}

task runYoRPCNodeB(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    main = 'net.corda.yo.ClientKt'
    args 'localhost:10009'
}
